[
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "os",
        "description": "os",
        "isExtraImport": true,
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "times",
        "importPath": "os",
        "description": "os",
        "isExtraImport": true,
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "auth",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "django.conf",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.conf",
        "description": "django.conf",
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "django.contrib.auth.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "AbstractUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "AbstractUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "django.contrib.auth.validators",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.validators",
        "description": "django.contrib.auth.validators",
        "detail": "django.contrib.auth.validators",
        "documentation": {}
    },
    {
        "label": "django.utils.timezone",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "accounts.models",
        "description": "accounts.models",
        "isExtraImport": true,
        "detail": "accounts.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "accounts.models",
        "description": "accounts.models",
        "isExtraImport": true,
        "detail": "accounts.models",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "routers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "DefaultRouter",
        "importPath": "rest_framework.routers",
        "description": "rest_framework.routers",
        "isExtraImport": true,
        "detail": "rest_framework.routers",
        "documentation": {}
    },
    {
        "label": "Any",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "make_password",
        "importPath": "django.contrib.auth.hashers",
        "description": "django.contrib.auth.hashers",
        "isExtraImport": true,
        "detail": "django.contrib.auth.hashers",
        "documentation": {}
    },
    {
        "label": "HttpRequest",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "ListView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "DeleteView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "UpdateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "CreateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "DetailView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "UserCreationForm",
        "importPath": "django.contrib.auth.forms",
        "description": "django.contrib.auth.forms",
        "isExtraImport": true,
        "detail": "django.contrib.auth.forms",
        "documentation": {}
    },
    {
        "label": "LoginView",
        "importPath": "django.contrib.auth.views",
        "description": "django.contrib.auth.views",
        "isExtraImport": true,
        "detail": "django.contrib.auth.views",
        "documentation": {}
    },
    {
        "label": "LogoutView",
        "importPath": "django.contrib.auth.views",
        "description": "django.contrib.auth.views",
        "isExtraImport": true,
        "detail": "django.contrib.auth.views",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "method_decorator",
        "importPath": "django.utils.decorators",
        "description": "django.utils.decorators",
        "isExtraImport": true,
        "detail": "django.utils.decorators",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "api_view",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "APIView",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "UserCreateSerializer",
        "importPath": "accounts.serializers",
        "description": "accounts.serializers",
        "isExtraImport": true,
        "detail": "accounts.serializers",
        "documentation": {}
    },
    {
        "label": "UserSerializer",
        "importPath": "accounts.serializers",
        "description": "accounts.serializers",
        "isExtraImport": true,
        "detail": "accounts.serializers",
        "documentation": {}
    },
    {
        "label": "ModelViewSet",
        "importPath": "rest_framework.viewsets",
        "description": "rest_framework.viewsets",
        "isExtraImport": true,
        "detail": "rest_framework.viewsets",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "about",
        "importPath": "blog.views",
        "description": "blog.views",
        "isExtraImport": true,
        "detail": "blog.views",
        "documentation": {}
    },
    {
        "label": "delete_blog",
        "importPath": "blog.views",
        "description": "blog.views",
        "isExtraImport": true,
        "detail": "blog.views",
        "documentation": {}
    },
    {
        "label": "edit_blog",
        "importPath": "blog.views",
        "description": "blog.views",
        "isExtraImport": true,
        "detail": "blog.views",
        "documentation": {}
    },
    {
        "label": "home",
        "importPath": "blog.views",
        "description": "blog.views",
        "isExtraImport": true,
        "detail": "blog.views",
        "documentation": {}
    },
    {
        "label": "create_blog",
        "importPath": "blog.views",
        "description": "blog.views",
        "isExtraImport": true,
        "detail": "blog.views",
        "documentation": {}
    },
    {
        "label": "view_blog",
        "importPath": "blog.views",
        "description": "blog.views",
        "isExtraImport": true,
        "detail": "blog.views",
        "documentation": {}
    },
    {
        "label": "BlogForm",
        "importPath": "blog.forms",
        "description": "blog.forms",
        "isExtraImport": true,
        "detail": "blog.forms",
        "documentation": {}
    },
    {
        "label": "home",
        "importPath": "todo.views",
        "description": "todo.views",
        "isExtraImport": true,
        "detail": "todo.views",
        "documentation": {}
    },
    {
        "label": "index",
        "importPath": "todo.views",
        "description": "todo.views",
        "isExtraImport": true,
        "detail": "todo.views",
        "documentation": {}
    },
    {
        "label": "uuid",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "uuid",
        "description": "uuid",
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "uuid4",
        "importPath": "uuid",
        "description": "uuid",
        "isExtraImport": true,
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "Url",
        "importPath": "url_shorner.models",
        "description": "url_shorner.models",
        "isExtraImport": true,
        "detail": "url_shorner.models",
        "documentation": {}
    },
    {
        "label": "Url",
        "importPath": "url_shorner.models",
        "description": "url_shorner.models",
        "isExtraImport": true,
        "detail": "url_shorner.models",
        "documentation": {}
    },
    {
        "label": "home",
        "importPath": "url_shorner.views",
        "description": "url_shorner.views",
        "isExtraImport": true,
        "detail": "url_shorner.views",
        "documentation": {}
    },
    {
        "label": "delete_url",
        "importPath": "url_shorner.views",
        "description": "url_shorner.views",
        "isExtraImport": true,
        "detail": "url_shorner.views",
        "documentation": {}
    },
    {
        "label": "redirect_to_url",
        "importPath": "url_shorner.views",
        "description": "url_shorner.views",
        "isExtraImport": true,
        "detail": "url_shorner.views",
        "documentation": {}
    },
    {
        "label": "UrlShortenerForm",
        "importPath": "url_shorner.forms",
        "description": "url_shorner.forms",
        "isExtraImport": true,
        "detail": "url_shorner.forms",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "CONFIG.asgi",
        "description": "CONFIG.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "CONFIG.asgi",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "CONFIG.base_urls",
        "description": "CONFIG.base_urls",
        "peekOfCode": "urlpatterns = [\n    path('', include('todo.urls')),\n    path('blogs/', include('blog.urls')),\n    path(\"shortner/\", include(\"url_shorner.urls\")),\n    path('myadmin/', admin.site.urls),\n    path('auth/', include(\"django.contrib.auth.urls\")),\n    path('auth/', include(\"accounts.urls\")),\n    path('api-auth/', include('rest_framework.urls'))\n    # path('auth/login/', CustomLoginView.as_view(),)\n] + static(settings.STATIC_URL, document_root=settings.STATIC_ROOT)",
        "detail": "CONFIG.base_urls",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "CONFIG.settings",
        "description": "CONFIG.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-4464=5(m0m@n_^je7mc7w+rmgs8c!x5ais1k!n4%vi^@nkij17'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = [\"localhost\", \"127.0.0.1\",]\n# Application definition\nINSTALLED_APPS = [",
        "detail": "CONFIG.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "CONFIG.settings",
        "description": "CONFIG.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-4464=5(m0m@n_^je7mc7w+rmgs8c!x5ais1k!n4%vi^@nkij17'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = [\"localhost\", \"127.0.0.1\",]\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "CONFIG.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "CONFIG.settings",
        "description": "CONFIG.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = [\"localhost\", \"127.0.0.1\",]\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "CONFIG.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "CONFIG.settings",
        "description": "CONFIG.settings",
        "peekOfCode": "ALLOWED_HOSTS = [\"localhost\", \"127.0.0.1\",]\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rest_framework',",
        "detail": "CONFIG.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "CONFIG.settings",
        "description": "CONFIG.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rest_framework',\n    \"todo\",\n    \"blog\",",
        "detail": "CONFIG.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "CONFIG.settings",
        "description": "CONFIG.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'CONFIG.base_urls'",
        "detail": "CONFIG.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "CONFIG.settings",
        "description": "CONFIG.settings",
        "peekOfCode": "ROOT_URLCONF = 'CONFIG.base_urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [\n            BASE_DIR / 'templates',\n            # path.join(BASE_DIR, 'templates'),\n        ],\n        'APP_DIRS': True,\n        'OPTIONS': {",
        "detail": "CONFIG.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "CONFIG.settings",
        "description": "CONFIG.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [\n            BASE_DIR / 'templates',\n            # path.join(BASE_DIR, 'templates'),\n        ],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [",
        "detail": "CONFIG.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "CONFIG.settings",
        "description": "CONFIG.settings",
        "peekOfCode": "WSGI_APPLICATION = 'CONFIG.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/4.2/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'mydb.sqlite3',\n    }\n}\n# Password validation",
        "detail": "CONFIG.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "CONFIG.settings",
        "description": "CONFIG.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'mydb.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "CONFIG.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "CONFIG.settings",
        "description": "CONFIG.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "CONFIG.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "CONFIG.settings",
        "description": "CONFIG.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "CONFIG.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "CONFIG.settings",
        "description": "CONFIG.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = \"accounts.User\"",
        "detail": "CONFIG.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "CONFIG.settings",
        "description": "CONFIG.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = \"accounts.User\"\nSTATIC_URL = '/static/'",
        "detail": "CONFIG.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "CONFIG.settings",
        "description": "CONFIG.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = \"accounts.User\"\nSTATIC_URL = '/static/'\nSTATIC_ROOT = os.path.join(BASE_DIR, 'static')",
        "detail": "CONFIG.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "CONFIG.settings",
        "description": "CONFIG.settings",
        "peekOfCode": "STATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = \"accounts.User\"\nSTATIC_URL = '/static/'\nSTATIC_ROOT = os.path.join(BASE_DIR, 'static')\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'staticfiles'),\n]",
        "detail": "CONFIG.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "CONFIG.settings",
        "description": "CONFIG.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = \"accounts.User\"\nSTATIC_URL = '/static/'\nSTATIC_ROOT = os.path.join(BASE_DIR, 'static')\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'staticfiles'),\n]\nLOGIN_REDIRECT_URL = \"/blogs\"\nLOGIN_URL = \"/auth/login/\"\nREST_FRAMEWORK = {",
        "detail": "CONFIG.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "CONFIG.settings",
        "description": "CONFIG.settings",
        "peekOfCode": "AUTH_USER_MODEL = \"accounts.User\"\nSTATIC_URL = '/static/'\nSTATIC_ROOT = os.path.join(BASE_DIR, 'static')\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'staticfiles'),\n]\nLOGIN_REDIRECT_URL = \"/blogs\"\nLOGIN_URL = \"/auth/login/\"\nREST_FRAMEWORK = {\n    # Use Django's standard `django.contrib.auth` permissions,",
        "detail": "CONFIG.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "CONFIG.settings",
        "description": "CONFIG.settings",
        "peekOfCode": "STATIC_URL = '/static/'\nSTATIC_ROOT = os.path.join(BASE_DIR, 'static')\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'staticfiles'),\n]\nLOGIN_REDIRECT_URL = \"/blogs\"\nLOGIN_URL = \"/auth/login/\"\nREST_FRAMEWORK = {\n    # Use Django's standard `django.contrib.auth` permissions,\n    # or allow read-only access for unauthenticated users.",
        "detail": "CONFIG.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_ROOT",
        "kind": 5,
        "importPath": "CONFIG.settings",
        "description": "CONFIG.settings",
        "peekOfCode": "STATIC_ROOT = os.path.join(BASE_DIR, 'static')\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'staticfiles'),\n]\nLOGIN_REDIRECT_URL = \"/blogs\"\nLOGIN_URL = \"/auth/login/\"\nREST_FRAMEWORK = {\n    # Use Django's standard `django.contrib.auth` permissions,\n    # or allow read-only access for unauthenticated users.\n    # 'DEFAULT_PERMISSION_CLASSES': [",
        "detail": "CONFIG.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "CONFIG.settings",
        "description": "CONFIG.settings",
        "peekOfCode": "STATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'staticfiles'),\n]\nLOGIN_REDIRECT_URL = \"/blogs\"\nLOGIN_URL = \"/auth/login/\"\nREST_FRAMEWORK = {\n    # Use Django's standard `django.contrib.auth` permissions,\n    # or allow read-only access for unauthenticated users.\n    # 'DEFAULT_PERMISSION_CLASSES': [\n    #     'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'",
        "detail": "CONFIG.settings",
        "documentation": {}
    },
    {
        "label": "LOGIN_REDIRECT_URL",
        "kind": 5,
        "importPath": "CONFIG.settings",
        "description": "CONFIG.settings",
        "peekOfCode": "LOGIN_REDIRECT_URL = \"/blogs\"\nLOGIN_URL = \"/auth/login/\"\nREST_FRAMEWORK = {\n    # Use Django's standard `django.contrib.auth` permissions,\n    # or allow read-only access for unauthenticated users.\n    # 'DEFAULT_PERMISSION_CLASSES': [\n    #     'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'\n    # ]\n}",
        "detail": "CONFIG.settings",
        "documentation": {}
    },
    {
        "label": "LOGIN_URL",
        "kind": 5,
        "importPath": "CONFIG.settings",
        "description": "CONFIG.settings",
        "peekOfCode": "LOGIN_URL = \"/auth/login/\"\nREST_FRAMEWORK = {\n    # Use Django's standard `django.contrib.auth` permissions,\n    # or allow read-only access for unauthenticated users.\n    # 'DEFAULT_PERMISSION_CLASSES': [\n    #     'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'\n    # ]\n}",
        "detail": "CONFIG.settings",
        "documentation": {}
    },
    {
        "label": "REST_FRAMEWORK",
        "kind": 5,
        "importPath": "CONFIG.settings",
        "description": "CONFIG.settings",
        "peekOfCode": "REST_FRAMEWORK = {\n    # Use Django's standard `django.contrib.auth` permissions,\n    # or allow read-only access for unauthenticated users.\n    # 'DEFAULT_PERMISSION_CLASSES': [\n    #     'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'\n    # ]\n}",
        "detail": "CONFIG.settings",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "CONFIG.wsgi",
        "description": "CONFIG.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "CONFIG.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "accounts.migrations.0001_initial",
        "description": "accounts.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('auth', '0012_alter_user_first_name_max_length'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='User',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "accounts.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "AccountsConfig",
        "kind": 6,
        "importPath": "accounts.apps",
        "description": "accounts.apps",
        "peekOfCode": "class AccountsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'accounts'",
        "detail": "accounts.apps",
        "documentation": {}
    },
    {
        "label": "UserRegistrationForm",
        "kind": 6,
        "importPath": "accounts.forms",
        "description": "accounts.forms",
        "peekOfCode": "class UserRegistrationForm(forms.ModelForm):\n    class Meta:\n        model = User\n        fields = [\"username\", \"first_name\", \"last_name\", \"email\", \"password\"]\n        widgets = {\n            'password': forms.PasswordInput(),\n        }\n    def clean_email(self):",
        "detail": "accounts.forms",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 6,
        "importPath": "accounts.models",
        "description": "accounts.models",
        "peekOfCode": "class User(AbstractUser):\n    ...\n    def __str__(self) -> str:\n        return f\"{self.username} -- {self.email}\"\n    # role = models.CharField(max_length=10, choices=ROLE_CHOICES, default=\"S\")",
        "detail": "accounts.models",
        "documentation": {}
    },
    {
        "label": "UserSerializer",
        "kind": 6,
        "importPath": "accounts.serializers",
        "description": "accounts.serializers",
        "peekOfCode": "class UserSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = User\n        fields = ['username', 'email', \"is_active\", \"is_staff\", \"is_superuser\", \"first_name\", \"last_name\", \"date_joined\", \"password\"]\nclass UserCreateSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = User\n        fields = ['username', 'email', \"first_name\", \"last_name\", \"password\"]\n# # ViewSets define the view behavior.\n# class UserViewSet(viewsets.ModelViewSet):",
        "detail": "accounts.serializers",
        "documentation": {}
    },
    {
        "label": "UserCreateSerializer",
        "kind": 6,
        "importPath": "accounts.serializers",
        "description": "accounts.serializers",
        "peekOfCode": "class UserCreateSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = User\n        fields = ['username', 'email', \"first_name\", \"last_name\", \"password\"]\n# # ViewSets define the view behavior.\n# class UserViewSet(viewsets.ModelViewSet):\n#     queryset = User.objects.all()\n#     serializer_class = UserSerializer\n# # Routers provide an easy way of automatically determining the URL conf.\n# router = routers.DefaultRouter()",
        "detail": "accounts.serializers",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "accounts.urls",
        "description": "accounts.urls",
        "peekOfCode": "app_name = \"url_shorner\"\nrouter = DefaultRouter()\nrouter.register(r'users', UserModelViewSet)\nurlpatterns = [\n    path('register/', RegistrationView.as_view(), name='register'),\n    path('__users/', UsersList.as_view(), name='users'),\n    path('myusers/', users, name='myusers'),\n    path('api/', get_users, name='myusers'),\n    path('api/users/', UserAPIView.as_view(), name='myusers2'),\n    path('', include(router.urls)),",
        "detail": "accounts.urls",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "accounts.urls",
        "description": "accounts.urls",
        "peekOfCode": "router = DefaultRouter()\nrouter.register(r'users', UserModelViewSet)\nurlpatterns = [\n    path('register/', RegistrationView.as_view(), name='register'),\n    path('__users/', UsersList.as_view(), name='users'),\n    path('myusers/', users, name='myusers'),\n    path('api/', get_users, name='myusers'),\n    path('api/users/', UserAPIView.as_view(), name='myusers2'),\n    path('', include(router.urls)),\n] ",
        "detail": "accounts.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "accounts.urls",
        "description": "accounts.urls",
        "peekOfCode": "urlpatterns = [\n    path('register/', RegistrationView.as_view(), name='register'),\n    path('__users/', UsersList.as_view(), name='users'),\n    path('myusers/', users, name='myusers'),\n    path('api/', get_users, name='myusers'),\n    path('api/users/', UserAPIView.as_view(), name='myusers2'),\n    path('', include(router.urls)),\n] \n# + router.urls\n# {",
        "detail": "accounts.urls",
        "documentation": {}
    },
    {
        "label": "RegistrationView",
        "kind": 6,
        "importPath": "accounts.views",
        "description": "accounts.views",
        "peekOfCode": "class RegistrationView(CreateView):\n    # fields = [\"username\", \"first_name\", \"last_name\", \"email\", \"password\"]\n    form_class = UserCreationForm\n    success_url = \"/\"\n    template_name = \"accounts/register.html\"\n    queryset = User.objects .all()\n    # http_method_names\n    def get(self, request: HttpRequest, *args: str, **kwargs: Any) -> HttpResponse:\n        print(\"GET request received\")\n        # return render(request, \"accounts/register.html\", {\"form\": self.get_form()})",
        "detail": "accounts.views",
        "documentation": {}
    },
    {
        "label": "UsersList",
        "kind": 6,
        "importPath": "accounts.views",
        "description": "accounts.views",
        "peekOfCode": "class UsersList(ListView):\n    queryset = User.objects.all()\n    template_name = \"accounts/users.html\"\n    # context_object_name = \"users\"\ndef user_detail(request, pk):\n    if request.method == \"POST\":\n        print(\"POST request received for user detail\")\n        # Handle POST request if needed\n        pass\n    if request.method == \"GET\":",
        "detail": "accounts.views",
        "documentation": {}
    },
    {
        "label": "UserAPIView",
        "kind": 6,
        "importPath": "accounts.views",
        "description": "accounts.views",
        "peekOfCode": "class UserAPIView(APIView):\n    def get(self, request: HttpRequest):\n        users = User.objects.all()\n        serializer = UserSerializer(users, many=True)\n        return Response(serializer.data)\n    def post(self, request: HttpRequest, *args: str, **kwargs: Any) -> HttpResponse:\n        serializer = UserCreateSerializer(data=request.data)\n        if serializer.is_valid():\n            serializer.save()\n            return Response(serializer.data, status=201)",
        "detail": "accounts.views",
        "documentation": {}
    },
    {
        "label": "UserModelViewSet",
        "kind": 6,
        "importPath": "accounts.views",
        "description": "accounts.views",
        "peekOfCode": "class UserModelViewSet(ModelViewSet):\n    queryset = User.objects.all()\n    http_method_names = [\"get\", \"post\", \"delete\", \"put\"]\n    serializer_class = UserSerializer\n    def perform_create(self, serializer):\n        password = self.request.data[\"password\"]\n        serializer.validated_data[\"password\"] = make_password(password)\n        return super().perform_create(serializer)\n    # def get_serializer_class(self):\n    #     if self.request.method == \"POST\":",
        "detail": "accounts.views",
        "documentation": {}
    },
    {
        "label": "user_detail",
        "kind": 2,
        "importPath": "accounts.views",
        "description": "accounts.views",
        "peekOfCode": "def user_detail(request, pk):\n    if request.method == \"POST\":\n        print(\"POST request received for user detail\")\n        # Handle POST request if needed\n        pass\n    if request.method == \"GET\":\n        print(\"GET request received for user detail\")\n        # Handle GET request if needed\n        pass\n    user = User.objects.get(pk=pk)",
        "detail": "accounts.views",
        "documentation": {}
    },
    {
        "label": "users",
        "kind": 2,
        "importPath": "accounts.views",
        "description": "accounts.views",
        "peekOfCode": "def users(req):\n    data = []\n    if req.method == \"POST\":\n        print(\"POST request received for users\")\n        # Handle POST request if needed\n        pass\n    if req.method == \"GET\":\n        users = User.objects.all()\n        serializer = UserSerializer(users, many=True)\n        data = serializer.data",
        "detail": "accounts.views",
        "documentation": {}
    },
    {
        "label": "get_users",
        "kind": 2,
        "importPath": "accounts.views",
        "description": "accounts.views",
        "peekOfCode": "def get_users(req):\n    if req.method == \"GET\":\n        users = User.objects.order_by(\"-date_joined\")\n        serializer = UserSerializer(users, many=True)\n        data = serializer.data\n        return Response(data, status=200)\n    else:\n        return HttpResponse(\"Method not allowed\", status=405)\nclass UserAPIView(APIView):\n    def get(self, request: HttpRequest):",
        "detail": "accounts.views",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 5,
        "importPath": "accounts.views",
        "description": "accounts.views",
        "peekOfCode": "User = get_user_model()\nclass RegistrationView(CreateView):\n    # fields = [\"username\", \"first_name\", \"last_name\", \"email\", \"password\"]\n    form_class = UserCreationForm\n    success_url = \"/\"\n    template_name = \"accounts/register.html\"\n    queryset = User.objects .all()\n    # http_method_names\n    def get(self, request: HttpRequest, *args: str, **kwargs: Any) -> HttpResponse:\n        print(\"GET request received\")",
        "detail": "accounts.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "blog.migrations.0001_initial",
        "description": "blog.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Blog',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "blog.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "BlogAdmin",
        "kind": 6,
        "importPath": "blog.admin",
        "description": "blog.admin",
        "peekOfCode": "class BlogAdmin(admin.ModelAdmin):\n    ...\n    list_display = [\"title\", \"id\"]\n@admin.register(Like)\nclass LikeAdmin(admin.ModelAdmin):\n    ...",
        "detail": "blog.admin",
        "documentation": {}
    },
    {
        "label": "LikeAdmin",
        "kind": 6,
        "importPath": "blog.admin",
        "description": "blog.admin",
        "peekOfCode": "class LikeAdmin(admin.ModelAdmin):\n    ...",
        "detail": "blog.admin",
        "documentation": {}
    },
    {
        "label": "BlogConfig",
        "kind": 6,
        "importPath": "blog.apps",
        "description": "blog.apps",
        "peekOfCode": "class BlogConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'blog'",
        "detail": "blog.apps",
        "documentation": {}
    },
    {
        "label": "BlogForm",
        "kind": 6,
        "importPath": "blog.forms",
        "description": "blog.forms",
        "peekOfCode": "class BlogForm(forms.ModelForm):\n    class Meta:\n        model = Blog\n        fields = [\n            \"user\",\n            \"title\",\n            \"content\",\n        ]\n        widgets = {\n            \"user\": forms.Select(attrs={\"class\": \"form-control\", \"id\": \"user_idd\"}),",
        "detail": "blog.forms",
        "documentation": {}
    },
    {
        "label": "Blog",
        "kind": 6,
        "importPath": "blog.models",
        "description": "blog.models",
        "peekOfCode": "class Blog(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n    title = models.CharField(max_length=50)\n    content = models.TextField()\n    timestamp = models.DateTimeField(auto_now_add=True)\n    updated =  models.DateTimeField(auto_now=True)\n    def __str__(self):\n        return self.title\nclass Comment(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE)",
        "detail": "blog.models",
        "documentation": {}
    },
    {
        "label": "Comment",
        "kind": 6,
        "importPath": "blog.models",
        "description": "blog.models",
        "peekOfCode": "class Comment(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n    blog = models.ForeignKey(Blog, on_delete=models.CASCADE)\n    text = models.TextField()\n    timestamp = models.DateTimeField(auto_now_add=True)\nclass Like(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n    blog = models.ForeignKey(Blog, on_delete=models.CASCADE)",
        "detail": "blog.models",
        "documentation": {}
    },
    {
        "label": "Like",
        "kind": 6,
        "importPath": "blog.models",
        "description": "blog.models",
        "peekOfCode": "class Like(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n    blog = models.ForeignKey(Blog, on_delete=models.CASCADE)",
        "detail": "blog.models",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 5,
        "importPath": "blog.models",
        "description": "blog.models",
        "peekOfCode": "User = settings.AUTH_USER_MODEL\n# Create your models here.\nclass Blog(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n    title = models.CharField(max_length=50)\n    content = models.TextField()\n    timestamp = models.DateTimeField(auto_now_add=True)\n    updated =  models.DateTimeField(auto_now=True)\n    def __str__(self):\n        return self.title",
        "detail": "blog.models",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "blog.urls",
        "description": "blog.urls",
        "peekOfCode": "app_name = \"blog\"\nurlpatterns = [\n    path('', home, name='index'),\n    path('about/', about, name='about'),\n    path('create/', create_blog, name='create_blog'),\n    path('<blog_id>/', view_blog, name='view_blog'),\n    path('edit/<blog_id>/', edit_blog, name='edit_blog'),\n    path('delete/<blog_id>/', delete_blog, name='delete_blog'),\n]",
        "detail": "blog.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "blog.urls",
        "description": "blog.urls",
        "peekOfCode": "urlpatterns = [\n    path('', home, name='index'),\n    path('about/', about, name='about'),\n    path('create/', create_blog, name='create_blog'),\n    path('<blog_id>/', view_blog, name='view_blog'),\n    path('edit/<blog_id>/', edit_blog, name='edit_blog'),\n    path('delete/<blog_id>/', delete_blog, name='delete_blog'),\n]",
        "detail": "blog.urls",
        "documentation": {}
    },
    {
        "label": "home",
        "kind": 2,
        "importPath": "blog.views",
        "description": "blog.views",
        "peekOfCode": "def home(request):\n    user = User.objects.get(id=1)\n    # print(\"\\n\\n\", \"Result: \", user, user.email, user.username, user.password, \"\\n\\n\")\n    # print(Blog.objects.create(user=user, title=\"New Blog\",\n    #       content=\"this is a new blog\",))\n    blogs = Blog.objects.all()\n    context = {\n        \"blogs\": blogs,\n        \"user\": user,\n    }",
        "detail": "blog.views",
        "documentation": {}
    },
    {
        "label": "create_blog",
        "kind": 2,
        "importPath": "blog.views",
        "description": "blog.views",
        "peekOfCode": "def create_blog(request):\n    form = BlogForm()\n    if request.method == \"POST\":\n        form = BlogForm(data=request.POST)\n        if form.is_valid():\n            form.save()\n            return redirect(\"blog:index\")\n    if request.method == \"GET\":\n        ...\n        print(dir(request))",
        "detail": "blog.views",
        "documentation": {}
    },
    {
        "label": "edit_blog",
        "kind": 2,
        "importPath": "blog.views",
        "description": "blog.views",
        "peekOfCode": "def edit_blog(request, blog_id):\n    blog = Blog.objects.get(id=blog_id)\n    form = BlogForm()\n    print(blog.id, blog.content)\n    print(blog.title)\n    form = BlogForm(instance=blog)\n    if request.method == \"POST\":\n        form = BlogForm(data=request.POST, instance=blog)\n        if form.is_valid():\n            form.save()",
        "detail": "blog.views",
        "documentation": {}
    },
    {
        "label": "view_blog",
        "kind": 2,
        "importPath": "blog.views",
        "description": "blog.views",
        "peekOfCode": "def view_blog(request, blog_id):\n    blog = Blog.objects.get(id=blog_id)\n    context = {}\n    if request.method == \"GET\":\n        context = {\n            \"blog\": blog\n        }\n    return render(request, \"blog/details.html\", context)\ndef about(request):\n    return render(request, \"blog/about.html\")",
        "detail": "blog.views",
        "documentation": {}
    },
    {
        "label": "about",
        "kind": 2,
        "importPath": "blog.views",
        "description": "blog.views",
        "peekOfCode": "def about(request):\n    return render(request, \"blog/about.html\")\ndef delete_blog(request, blog_id):\n    blog = Blog.objects.get(id=blog_id)\n    if request.method == \"POST\":\n        blog.delete()\n        return redirect(\"blog:index\")\n    context = {\n        \"blog\": blog\n    }",
        "detail": "blog.views",
        "documentation": {}
    },
    {
        "label": "delete_blog",
        "kind": 2,
        "importPath": "blog.views",
        "description": "blog.views",
        "peekOfCode": "def delete_blog(request, blog_id):\n    blog = Blog.objects.get(id=blog_id)\n    if request.method == \"POST\":\n        blog.delete()\n        return redirect(\"blog:index\")\n    context = {\n        \"blog\": blog\n    }\n    return render(request, \"blog/delete.html\", context)",
        "detail": "blog.views",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 5,
        "importPath": "blog.views",
        "description": "blog.views",
        "peekOfCode": "User = get_user_model()\n# Create your views here.\ndef home(request):\n    user = User.objects.get(id=1)\n    # print(\"\\n\\n\", \"Result: \", user, user.email, user.username, user.password, \"\\n\\n\")\n    # print(Blog.objects.create(user=user, title=\"New Blog\",\n    #       content=\"this is a new blog\",))\n    blogs = Blog.objects.all()\n    context = {\n        \"blogs\": blogs,",
        "detail": "blog.views",
        "documentation": {}
    },
    {
        "label": "SchoolConfig",
        "kind": 6,
        "importPath": "school.apps",
        "description": "school.apps",
        "peekOfCode": "class SchoolConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'school'",
        "detail": "school.apps",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 6,
        "importPath": "school.models",
        "description": "school.models",
        "peekOfCode": "class User(AbstractUser):\n    ROLE_CHOICES = (\n        (\"T\", \"Teacher\"),\n        (\"S\", \"Student\"),\n    )\n    role = models.CharField(max_length=10, choices=ROLE_CHOICES, default=\"S\")\nclass AcademicSession(models.Model):\n    name = models.CharField(max_length=9)\n    start_date = models.DateField()\n    end_date = models.DateField()",
        "detail": "school.models",
        "documentation": {}
    },
    {
        "label": "AcademicSession",
        "kind": 6,
        "importPath": "school.models",
        "description": "school.models",
        "peekOfCode": "class AcademicSession(models.Model):\n    name = models.CharField(max_length=9)\n    start_date = models.DateField()\n    end_date = models.DateField()\nclass Term(models.Model):\n    TERMS = (\n        (\"1st\", \"1st Term\"),\n        (\"2nd\", \"2nd Term\"),\n        (\"3rd\", \"3rd Term\"),\n    )",
        "detail": "school.models",
        "documentation": {}
    },
    {
        "label": "Term",
        "kind": 6,
        "importPath": "school.models",
        "description": "school.models",
        "peekOfCode": "class Term(models.Model):\n    TERMS = (\n        (\"1st\", \"1st Term\"),\n        (\"2nd\", \"2nd Term\"),\n        (\"3rd\", \"3rd Term\"),\n    )\n    name = models.CharField(max_length=9, choices=TERMS)\n    academic_session = models.ForeignKey(AcademicSession, on_delete=models.CASCADE)\n    start_date = models.DateField()\n    end_date = models.DateField()",
        "detail": "school.models",
        "documentation": {}
    },
    {
        "label": "SchoolClass",
        "kind": 6,
        "importPath": "school.models",
        "description": "school.models",
        "peekOfCode": "class SchoolClass(models.Model):\n    CLASSES = (\n        (\"JSS1\", \"JSS1\"),\n        (\"JSS2\", \"JSS2\"),\n        (\"JSS3\", \"JSS3\"),\n        (\"SSS1\", \"SSS1\"),\n        (\"SSS1\", \"SSS1\"),\n        (\"SSS1\", \"SSS1\"),\n    )\n    name = models.CharField(max_length=9, choices=CLASSES)",
        "detail": "school.models",
        "documentation": {}
    },
    {
        "label": "Student",
        "kind": 6,
        "importPath": "school.models",
        "description": "school.models",
        "peekOfCode": "class Student(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE, related_name=\"student_profile\")\n    academic_session = models.ForeignKey(AcademicSession, on_delete=models.CASCADE)\n    school_class = models.ForeignKey(SchoolClass, on_delete=models.CASCADE)\nclass Teacher(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n    academic_session = models.ForeignKey(AcademicSession, on_delete=models.CASCADE)",
        "detail": "school.models",
        "documentation": {}
    },
    {
        "label": "Teacher",
        "kind": 6,
        "importPath": "school.models",
        "description": "school.models",
        "peekOfCode": "class Teacher(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n    academic_session = models.ForeignKey(AcademicSession, on_delete=models.CASCADE)",
        "detail": "school.models",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "todo.migrations.0001_initial",
        "description": "todo.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Todo',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('title', models.CharField(max_length=200)),",
        "detail": "todo.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "TodoAdmin",
        "kind": 6,
        "importPath": "todo.admin",
        "description": "todo.admin",
        "peekOfCode": "class TodoAdmin(admin.ModelAdmin):\n    list_display = [\"title\", \"id\", ]\n# admin.site.register(Todo, TodoAdmin)",
        "detail": "todo.admin",
        "documentation": {}
    },
    {
        "label": "TodoConfig",
        "kind": 6,
        "importPath": "todo.apps",
        "description": "todo.apps",
        "peekOfCode": "class TodoConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'todo'",
        "detail": "todo.apps",
        "documentation": {}
    },
    {
        "label": "Todo",
        "kind": 6,
        "importPath": "todo.models",
        "description": "todo.models",
        "peekOfCode": "class Todo(models.Model):\n    title = models.CharField(max_length=200)\n    description = models.TextField()\n    completed = models.BooleanField(default=False)\n    timestamp = models.DateTimeField(auto_now_add=True)\n    updated = models.DateTimeField(auto_now=True)",
        "detail": "todo.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "todo.urls",
        "description": "todo.urls",
        "peekOfCode": "urlpatterns = [\n    path('', index, name='index'),\n    path('h/', home, name='home'),\n]",
        "detail": "todo.urls",
        "documentation": {}
    },
    {
        "label": "HomeView",
        "kind": 6,
        "importPath": "todo.views",
        "description": "todo.views",
        "peekOfCode": "class HomeView(View):\n    ...",
        "detail": "todo.views",
        "documentation": {}
    },
    {
        "label": "index",
        "kind": 2,
        "importPath": "todo.views",
        "description": "todo.views",
        "peekOfCode": "def index(request):\n    return render(request, 'todo/index.html')\ndef home(request):\n    return render(request, 'home.html')\nclass HomeView(View):\n    ...",
        "detail": "todo.views",
        "documentation": {}
    },
    {
        "label": "home",
        "kind": 2,
        "importPath": "todo.views",
        "description": "todo.views",
        "peekOfCode": "def home(request):\n    return render(request, 'home.html')\nclass HomeView(View):\n    ...",
        "detail": "todo.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "url_shorner.migrations.0001_initial",
        "description": "url_shorner.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Url',\n            fields=[\n                ('url', models.CharField(max_length=10000)),\n                ('uid', models.CharField(default=uuid.uuid4, editable=False, max_length=5, primary_key=True, serialize=False, unique=True)),",
        "detail": "url_shorner.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "url_shorner.migrations.0002_alter_url_url",
        "description": "url_shorner.migrations.0002_alter_url_url",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('url_shorner', '0001_initial'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='url',\n            name='url',\n            field=models.URLField(),\n        ),",
        "detail": "url_shorner.migrations.0002_alter_url_url",
        "documentation": {}
    },
    {
        "label": "UrlShornerConfig",
        "kind": 6,
        "importPath": "url_shorner.apps",
        "description": "url_shorner.apps",
        "peekOfCode": "class UrlShornerConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'url_shorner'",
        "detail": "url_shorner.apps",
        "documentation": {}
    },
    {
        "label": "UrlShortenerForm",
        "kind": 6,
        "importPath": "url_shorner.forms",
        "description": "url_shorner.forms",
        "peekOfCode": "class UrlShortenerForm(forms.ModelForm):\n    class Meta:\n        model = Url\n        fields = ['url']\n        widgets = {\n            'url': forms.TextInput(attrs={\n                'placeholder': 'Enter URL here',\n                'class': 'form-control'\n            })\n        }",
        "detail": "url_shorner.forms",
        "documentation": {}
    },
    {
        "label": "Url",
        "kind": 6,
        "importPath": "url_shorner.models",
        "description": "url_shorner.models",
        "peekOfCode": "class Url(models.Model):\n    url = models.URLField()\n    uid = models.CharField(max_length=5, unique=True,\n                           primary_key=True, default=generate_unique_id, editable=False)\n    created_at = models.DateTimeField(auto_now_add=True)\n    def __str__(self):\n        return f\"{self.uid} - {self.url}\"",
        "detail": "url_shorner.models",
        "documentation": {}
    },
    {
        "label": "generate_unique_id",
        "kind": 2,
        "importPath": "url_shorner.models",
        "description": "url_shorner.models",
        "peekOfCode": "def generate_unique_id():\n    return str(uuid4())[:5]\nclass Url(models.Model):\n    url = models.URLField()\n    uid = models.CharField(max_length=5, unique=True,\n                           primary_key=True, default=generate_unique_id, editable=False)\n    created_at = models.DateTimeField(auto_now_add=True)\n    def __str__(self):\n        return f\"{self.uid} - {self.url}\"",
        "detail": "url_shorner.models",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "url_shorner.urls",
        "description": "url_shorner.urls",
        "peekOfCode": "app_name = \"url_shorner\"\nurlpatterns = [\n    path('', home, name='index'),\n    path('<str:uid>/', redirect_to_url, name='redirect_to_url'),\n    path('delete/<str:uid>/', delete_url, name='delete_url'),\n]",
        "detail": "url_shorner.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "url_shorner.urls",
        "description": "url_shorner.urls",
        "peekOfCode": "urlpatterns = [\n    path('', home, name='index'),\n    path('<str:uid>/', redirect_to_url, name='redirect_to_url'),\n    path('delete/<str:uid>/', delete_url, name='delete_url'),\n]",
        "detail": "url_shorner.urls",
        "documentation": {}
    },
    {
        "label": "home",
        "kind": 2,
        "importPath": "url_shorner.views",
        "description": "url_shorner.views",
        "peekOfCode": "def home(request):\n    from django.db.models import Value\n    all_urls = Url.objects.all()\n    # .annotate(\n    #     short_url=Value(f\"{request.build_absolute_uri('/shortner/uid/')}\",\n    # )\n    messages.success(request, 'This is a success message.')\n    messages.error(request, 'An error occurred.')\n    messages.warning(request, 'This is a warning.')\n    messages.info(request, 'Just an informational message.')",
        "detail": "url_shorner.views",
        "documentation": {}
    },
    {
        "label": "delete_url",
        "kind": 2,
        "importPath": "url_shorner.views",
        "description": "url_shorner.views",
        "peekOfCode": "def delete_url(request, uid):\n    url = Url.objects.get(uid=uid)\n    url.delete()\n    return redirect(\"url_shorner:index\")\ndef redirect_to_url(request, uid):\n    # url = Url.objects.get(uid=uid)\n    url = get_object_or_404(Url, uid=uid)\n    # Redirect to a specific URL\n    return redirect(url.url)",
        "detail": "url_shorner.views",
        "documentation": {}
    },
    {
        "label": "redirect_to_url",
        "kind": 2,
        "importPath": "url_shorner.views",
        "description": "url_shorner.views",
        "peekOfCode": "def redirect_to_url(request, uid):\n    # url = Url.objects.get(uid=uid)\n    url = get_object_or_404(Url, uid=uid)\n    # Redirect to a specific URL\n    return redirect(url.url)",
        "detail": "url_shorner.views",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'CONFIG.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]